# If this is your first time writing a language grammar, check out:
#   - http://manual.macromates.com/en/language_grammars


'fileTypes': [
   'sru'
   'srw'
   'srs'
   'sra'
 ]

'name': 'PowerBuilder'

'patterns': [
    {
      'match': '\\/\\/.*$'
      'name': 'comment.inline'
    }

    {
      'name': 'comment.block'
      'begin': '\/\\*'
      'end': '\\*\\/'
    }

    {
      'name': 'keyword.line_continuation'
      'match': '&\\s*$'
    }

    {
      'name': 'storage.misc'
      'match': '\\b(^forward$|^global type|from|end type|type variables|end variables|forward prototypes|end prototypes)\\b'
    }

    {
      'name': 'keyword.boolean'
      'match': '(?i:\\b(not|or|and)\\b)'
    }

    {
      'name': 'keyword.control'
      'match': '(?i:\\b(if|do while|for|return|goto|type|forward|then|end if|loop|do|else|elseif|end for|next|choose case|end choose|case |continue|exit|to|step)\\b)'
    }

    {
      'name': 'constant.enumerations'
      'match': '(?i:[a-z]+!)'
    }

    {
      'name': 'constant.numeric'
      'match': '\\b\\-*[0-9]+\\b'
    }

    {
      'name': 'storage.methods';
      'match': '(?i:\\b(event|function|subroutine|end event|end function|end subroutine)\\b)'
    }

    {
      'name': 'keyword.methodmodifier'
      'match': '(?i:\\b\.(dynamic|event|post|trigger)\\b)'
    }

    {
      'name': 'storage.access'
      'match': '(?i:\\b(global|shared|constant|public|private|protected|privatewrite|protectedwrite|ref|readonly)\\b)'
    }

    {
      'name': 'entity.simpletypes'
      'match': '(?i:\\b(any|boolean|integer|decimal|double|long|string|datetime|date)\\b)'
    }

    {
      'name': 'entity.standardtypes'
      'match': '(?i:\\b(powerobject|window|datawindow|datastore|tab|userobject|datawindowchild|throwable|runtimeerror|exception|dwbuffer)\\b)'
    }

    {
      'name': 'keyword.misc'
      'match': '(?i:\\b(prototypes|this)\\b)'
    }

    {
      'name': 'string.quoted.double.untitled'
      'begin': '"'
      'escape': '~'
      'end': '"'
    }

#    {
#      'name': 'string.quoted.single.untitled'
#      'begin': '\''
#      'end': '\''
#    }

    {
      'name': 'constant.boolean'
      'match': '(?i:\\b(true|false)\\b)'
    }

    {
      'name': 'keyword.gotolabel'
      'match': '(?i:^.*\:$)'
    }

]

'scopeName': 'source.powerscript'

#'scopeName': 'source.datawindow'
#'fileTypes': [
#  'srd'
#]
